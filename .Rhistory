nrows=190, blank.lines.skip=TRUE)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE, col.names=c("CountryCode","Rank","","Economy", "GDP"),
colClasses=c("character","numeric","character","character","numeric"), strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE)
View(gd)
View(gd)
gdp<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE, col.names=c("CountryCode","Rank","","Economy", "GDP"),
colClasses=c("character","numeric","character","character","numeric"), strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE)
gdp<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE,
strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE,
strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
View(gd)
View(gd)
gdp<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
gdp<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE,
strip.white=TRUE, sep=","
nrows=190, blank.lines.skip=TRUE)
gdp<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE,
strip.white=TRUE, sep=",",
nrows=190, blank.lines.skip=TRUE)
gdp<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE,
strip.white=TRUE, sep=",",
nrows=10, blank.lines.skip=TRUE)
gdp<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE,
strip.white=TRUE, sep=",",
blank.lines.skip=TRUE)
gdp<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE, col.names=c("CountryCode","Rank","","Economy", "GDP",""
"","","","","",""), strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
gdp<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE, col.names=c("CountryCode","Rank","","Economy", "GDP",""
"","",""), strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE, col.names=c("CountryCode","Rank","","Economy", "GDP",""
"","",""), strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE, col.names=c("CountryCode","Rank","",
"Economy", "GDP","",
"","",""), strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE, col.names=c("CountryCode","Rank","",
"Economy", "GDP","",
"","","",""), strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, row.names = FALSE, strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
View(gd)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="",
col.names=c("CountryCode","Rank","", "Economy","GDP","",
"","","",""))
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="",
col.names=c("",CountryCode","Rank","", "Economy","GDP","",
"","","",""))
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="",
col.names=c("","CountryCode","Rank","", "Economy","GDP","",
"","","",""))
View(gd)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=5, strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
View(gd)
View(gdp)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
col.names=c("","CountryCode","Rank","", "Economy","GDP","",
"","","",""))
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE,
nrows=190, blank.lines.skip=TRUE, quote="")
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE,
blank.lines.skip=TRUE, quote="")
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE,
blank.lines.skip=TRUE)
View(gdp)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE,
blank.lines.skip=TRUE, nrows=190)
View(gdp)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE, row.names=FALSE
blank.lines.skip=TRUE, nrows=190)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE, row.names=FALSE,
blank.lines.skip=TRUE, nrows=190)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE,
blank.lines.skip=TRUE, nrows=190)
View(gdp)
gdp<-gdp[,c(1,2,4,5)]
View(gdp)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE,
blank.lines.skip=TRUE, nrows=190)
gdp<-gdp[,c(1,2,4,5)]
colnames(gfp)<-c("CountryCode","Rank","Country","GDP")
colnames(gdp)<-c("CountryCode","Rank","Country","GDP")
View(gdp)
class(gdp$GDP)<-"nemeric"
View(gdp)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE,
blank.lines.skip=TRUE, nrows=190)
gdp<-gdp[,c(1,2,4,5)]
colnames(gdp)<-c("CountryCode","Rank","Country","GDP")
View(gdp)
gsub(" ","", gdp$GDP , fixed=TRUE)
View(gdp)
x<-gsub(" ","", gdp$GDP , fixed=TRUE)
gdp$GDP<-gsub(" ","", gdp$GDP , fixed=TRUE)
View(gdp)
class(gdp$GDP)<-"nemeric"
View(gdp)
ed<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ",
skip=4, strip.white=TRUE,
blank.lines.skip=TRUE, nrows=190)
View(ed)
ed$CountryCode %in% gdp%CountryCode
ed$CountryCode %in% gdp$CountryCode
match(ed$CountryCode , gdp$CountryCode)
match(as.vector(ed$CountryCode) , gdp$CountryCode)
match(as.vector(ed$CountryCode) , as.vector(gdp$CountryCode))
x<-match(as.vector(ed$CountryCode) , as.vector(gdp$CountryCode))
x<-match(ed$CountryCode, gdp$CountryCode)
View(gdp)
View(ed)
ed<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ",
strip.white=TRUE,
blank.lines.skip=TRUE, nrows=190)
x<-match(ed$CountryCode, gdp$CountryCode)
HOECD<-ed[ed$Income.Group=="High income: OECD","CountryCode"]
HOECD<-ed[ed$Income.Group=="High income: OECD","CountryCode"]
View(ed)
library(dply)
library(dplyr)
HOECD<-filter(ed,Income.Group=="High income: OECD")
HOECDGDP<-filter(gdp,gdp$CountryCode %in HOECD$CountryCode)
x<-match(gd$X,ed$CountryCode)
HOECDGDP<-filter(gdp,gdp$CountryCode %in HOECD$CountryCode)
HOECDGDP<-filter(gdp,gdp$CountryCode %in% HOECD$CountryCode)
View(HOECD)
HOECDGDP<-filter(gdp,gdp$CountryCode %in% as.vector(HOECD$CountryCode))
gdp
sum(gdp$GDP)
str(gdp)
class(gdp$GDP)<-"numeric"
View(gdp)
gdp<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip=4, strip.white=TRUE,
blank.lines.skip=TRUE, nrows=190)
gdp<-gdp[,c(1,2,4,5)]
colnames(gdp)<-c("CountryCode","Rank","Country","GDP")
gdp$GDP<-gsub(" ","", gdp$GDP , fixed=TRUE)
f<-as.numeric(gdp$GDP)
gdp$GDP<-gsub(",","", gdp$GDP , fixed=TRUE)
View(gdp)
f<-as.numeric(gdp$GDP)
class(gdp$GDP)<-"numeric"
View(gdp)
sum(gdp$GDP)
HOECD<-filter(ed,Income.Group=="High income: OECD")
HOECDGDP<-filter(gdp,gdp$CountryCode %in% as.vector(HOECD$CountryCode))
mean(HOECDGDP$GDP)
mean(HOECDGDP$Rank)
library(dplyr)
mutate.step <- function(data, interval.steps){
if(is.na(data$steps)){
interval.steps[data$interval,]
} else{
data$steps
}
}
imputed.data <- data
x <- lapply(imputed.data, mutate.step(impute.data, interval.averages))
mutate.step <- function(data, interval.steps){
if(is.na(data$steps)){
interval.steps[data$interval,]
} else{
data$steps
}
}
imputed.data <- data
x <- lapply(imputed.data, mutate.step(imputed.data, interval.averages))
mutate.step <- function(data, interval.steps){
if(is.na(data$steps)){
interval.steps[data$interval,]
} else{
data$steps
}
}
imputed.data <- data
x <- lapply(imputed.data, mutate.step, imputed.data, interval.averages)
interval.averages <- cbind(unique(data$interval),
data.frame(tapply(data$steps, data$interval, mean,
simplify = TRUE, na.rm=TRUE)))
file.dir <- "C:/Users/ssharaf/Documents/RWD/Course5/Assignment1"
setwd(file.dir)
zip.file <- "repdata_data_activity.zip"
file.name <- "activity.csv"
if (!file.exists(file.name)){
unzip(zip.file)
}
data <- read.csv(file.name)
interval.averages <- cbind(unique(data$interval),
data.frame(tapply(data$steps, data$interval, mean,
simplify = TRUE, na.rm=TRUE)))
colnames(interval.averages) <- c("Interval", "Steps")
plot(interval.averages$Interval,interval.averages$Steps, type="l",
main = "Daily Average Steps for Each Interval", xlab = "Interval",
ylab = "Average Steps")
##max(interval.averages)
interval.averages.maximum <- max(interval.averages$Steps)
interval.averages.maximum.row <- (interval.averages[which.max(
interval.averages$Steps),])
library(dplyr)
mutate.step <- function(data, interval.steps){
if(is.na(data$steps)){
interval.steps[data$interval,]
} else{
data$steps
}
}
imputed.data <- data
x <- lapply(imputed.data, mutate.step, imputed.data, interval.averages)
x <- lapply(imputed.data, mutate.step, imputed.data, interval.averages)
View(interval.averages)
View(imputed.data)
library(dplyr)
mutate.step <- function(data, interval.steps){
if(is.na(data$steps)){
interval.steps[data$interval,1]
} else{
data$steps
}
}
imputed.data <- data
x <- lapply(imputed.data, mutate.step, imputed.data, interval.averages)
for (I in 1:17568){
if(is.na(imputed.data[i, "steps"])){
imputed.data[i, "steps"] <- interval.averages[imputed.data[i,"interval"],1]
}
)
for (i in 1:17568){
if(is.na(imputed.data[i, "steps"])){
imputed.data[i, "steps"] <- interval.averages[imputed.data[i,"interval"],1]
}
}
View(imputed.data)
for (i in 1:17567){
if(is.na(imputed.data[i, "steps"])){
imputed.data[i, "steps"] <- interval.averages[imputed.data[i,"interval"],1]
}
}
for (i in 1:17567){
print 1
}
for (i in 1:17567){
x<-1
}
for (i in 1:17568){
imputed.data[i, "steps"] <- interval.averages[imputed.data[i,"interval"],1]
}
for (i in 1:17568){
imputed.data[i, "steps"] <- 1
}
View(imputed.data)
View(imputed.data)
for (i in 1:17568){
if(is.na(imputed.data[i, "steps"])){
imputed.data[i, "steps"] <- 1
}
}
View(imputed.data)
View(imputed.data)
imputed.data <- data
for (i in 1:17568){
if(is.na(imputed.data[i, "steps"])){
imputed.data[i, "steps"] <- 1
}
}
View(imputed.data)
View(imputed.data)
str(imputed.data)
interval.averages[imputed.data[1,"interval"],1]
interval.averages[imputed.data[2,"interval"],1]
interval.averages[imputed.data[3,"interval"],1]
interval.averages[imputed.data[3,"interval"],2]
imputed.data[3,]
interval.averages[interval==imputed.data[3,"interval"],2]
interval.averages["interval"==imputed.data[3,"interval"],2]
imputed.data[3,"interval"]
interval.averages["interval"=imputed.data[3,"interval"],2]
interval.averages["interval"==imputed.data[3,"interval"],]
interval.averages["Interval"==imputed.data[3,"interval"],]
interval.averages["Interval"=imputed.data[3,"interval"],]
interval.averages["Interval"==imputed.data[3,"interval"],]
interval.averages["Interval"%in%imputed.data[3,"interval"],]
interval.averages["Interval"!=imputed.data[3,"interval"],]
imputed.data[3,"interval"]
str(imputed.data)
str(inteval.averages)
str(interval.averages)
interval.averages <- cbind(as.integer(unique(data$interval)),
data.frame(tapply(data$steps, data$interval, mean,
simplify = TRUE, na.rm=TRUE)))
colnames(interval.averages) <- c("Interval", "Steps")
plot(interval.averages$Interval,interval.averages$Steps, type="l",
main = "Daily Average Steps for Each Interval", xlab = "Interval",
ylab = "Average Steps")
##max(interval.averages)
interval.averages.maximum <- max(interval.averages$Steps)
interval.averages.maximum.row <- (interval.averages[which.max(
interval.averages$Steps),])
str(interval.averages)
interval.averages["Interval"==imputed.data[3,"interval"],]
imputed.data[3,"interval"]
interval.averages["Interval"==10,]
interval.averages[interval.averages$Interval==10,]
interval.averages[internal.averages$Interva"==imputed.data[3,"interval"],]
interval.averages[internal.averages$Interval==imputed.data[3,"interval"],]
interval.averages[interval.averages$Interval==imputed.data[3,"interval"],]
imputed.data <- data
for (i in 1:17568){
if(is.na(imputed.data[i, "steps"])){
imputed.data[i, "steps"] <- interval.averages[interval.averages$Interval
==imputed.data[i,
"interval"],]
}
}
warnings()
interval.averages[interval.averages$Interval==imputed.data[3,"interval"],]
interval.averages[interval.averages$Interval==imputed.data[3,"interval"],2]
imputed.data <- data
for (i in 1:17568){
if(is.na(imputed.data[i, "steps"])){
imputed.data[i, "steps"] <- interval.averages[interval.averages$Interval
==imputed.data[i,
"interval"],2]
}
}
View(imputed.data)
View(imputed.data)
mutate.step <- function(data, interval.steps){
if(is.na(data$steps)){
interval.steps[interval.steps$Interval == data$interval,2]
} else{
data$steps
}
}
imputed.data <- data
x <- lapply(imputed.data, mutate.step, imputed.data, interval.averages)
}
new.daily.steps <- tapply(imputed.data$steps, imputed.data$date, sum)
hist(new.daily.steps, main = "Histogram of (imputed) Daily Steps",
xlab = "Total Steps")
mean(new.daily.steps)
new.daily.steps
for (i in 1:17568){
if(is.na(imputed.data[i, "steps"])){
imputed.data[i, "steps"] <- interval.averages[interval.averages$Interval
==imputed.data[i,
"interval"],2]
}
}
new.daily.steps <- tapply(imputed.data$steps, imputed.data$date, sum)
hist(new.daily.steps, main = "Histogram of (imputed) Daily Steps",
xlab = "Total Steps")
mean(new.daily.steps)
new.daily.steps.median <- median(new.daily.steps)
new.daily.steps.median
new.daily.steps.mean <- as.integer(mean(new.daily.steps))
library(dplyr)
mutate(imputed.data, weekday = weekdays(date))
str(imputed.data)
library(dplyr)
mutate(imputed.data, weekday = weekdays(as.Date(date))
)
View(imputed.data)
View(imputed.data)
imputed.data <- mutate(imputed.data, weekday = weekdays(as.Date(date)))
View(imputed.data)
imputed.data.weekday <- imputed.data.weekday[weekday !%in% c("Saturday",
"Sunday")]
imputed.data.weekday <- imputed.data.weekday[weekday %in% c("Saturday",
"Sunday")]
imputed.data.weekday <- imputed.data[weekday %in% c("Saturday",
"Sunday")]
imputed.data.weekday <- imputed.data[imputed.data$weekday %in% c("Saturday",
"Sunday")]
imputed.data.weekday <- imputed.data[imputed.data$weekday=="Sunday"]
imputed.data$weekday
str(imputed.data)
imputed.data.weekday <- imputed.data[weekday == "Sunday"]
imputed.data.weekday <- imputed.data[imputed.data$weekday == "Sunday"]
imputed.data.weekday <- subset(imputed.data, weekday %in% c("Saturday",
"Sunday"))
View(imputed.data.weekday)
View(imputed.data.weekday)
imputed.data.weekday <- subset(imputed.data, weekday !%in% c("Saturday",
"Sunday"))
imputed.data.weekday <- subset(imputed.data, weekday %o% c("Saturday",
"Sunday"))
imputed.data.weekday <- subset(imputed.data, weekday %x% c("Saturday",
"Sunday"))
imputed.data.weekend <- imputed.data[imputed.data$weekday %in% c("Saturday",
"Sunday")]
imputed.data.weekday <- subset(imputed.data, weekday %x% c("Monday",
"Tuesday",
"Wednesday",
"Tursday",
"Friday"))
imputed.data.weekend <- imputed.data[imputed.data$weekday %in% c("Saturday",
"Sunday")]
imputed.data.weekday <- subset(imputed.data, weekday %in% c("Monday",
"Tuesday",
"Wednesday",
"Tursday",
"Friday"))
imputed.data.weekend <- imputed.data[imputed.data$weekday %in% c("Saturday",
"Sunday")]
library(dplyr)
imputed.data <- mutate(imputed.data, weekday = weekdays(as.Date(date)))
imputed.data.weekday <- subset(imputed.data, weekday %in% c("Saturday",
"Sunday"))
imputed.data.weekday <- subset(imputed.data, weekday %in% c("Monday",
"Tuesday",
"Wednesday",
"Tursday",
"Friday"))
imputed.data.weekday <- subset(imputed.data, weekday %in% c("Saturday",
"Sunday"))
imputed.data <- mutate(imputed.data, weekday = weekdays(as.Date(date)))
imputed.data.weekend <- subset(imputed.data, weekday %in% c("Saturday",
"Sunday"))
imputed.data.weekday <- subset(imputed.data, weekday %in% c("Monday",
"Tuesday",
"Wednesday",
"Tursday",
"Friday"))
View(imputed.data.weekday)
View(imputed.data.weekday)
imputed.data.weekday <- subset(imputed.data, weekday %in% c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday"))
View(imputed.data.weekday)
View(imputed.data.weekday)
mean(interval.averages.weekend$steps)
library(dplyr)
imputed.data <- mutate(imputed.data, weekday = weekdays(as.Date(date)))
imputed.data.weekend <- subset(imputed.data, weekday %in% c("Saturday",
"Sunday"))
imputed.data.weekday <- subset(imputed.data, weekday %in% c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday"))
interval.averages.weekday <- cbind(as.integer(unique(imputed.data.weekday$interval)),
data.frame(tapply(imputed.data.weekday$steps,
imputed.data.weekday$interval, mean,
simplify = TRUE, na.rm=TRUE)))
colnames(interval.averages.weekday) <- c("Interval", "Steps")
plot(interval.averages.weekday$Interval,interval.averages.weekday$Steps,
type="l",
main = "Weekday Average Steps for Each Interval", xlab = "Interval",
ylab = "Average Steps")
mean(interval.averages.weekday$steps)
interval.averages.weekend <- cbind(as.integer(unique(imputed.data.weekend$interval)),
data.frame(tapply(imputed.data.weekend$steps,
imputed.data.weekend$interval, mean,
simplify = TRUE, na.rm=TRUE)))
colnames(interval.averages.weekend) <- c("Interval", "Steps")
plot(interval.averages.weekend$Interval,interval.averages.weekend$Steps,
type="l",
main = "Weekend Average Steps for Each Interval", xlab = "Interval",
ylab = "Average Steps")
mean(interval.averages.weekend$steps)
mean(as.numeric(interval.averages.weekday$steps)
)
